Short Answer:

1. What is a real-life scenario that uses linear search?

We have a collection of 100 pennies, only one of which is from 1887.  We pick each up in
succession and check to see if it has 1887 on it.  We're done once we find it.

2. What is a real-life scenario that uses binary search?

We have an alphabetized list of name headings in a book, one for each page.  We search for
a particular name.  Use iterative or recursive binary search to find it.  Start at center. ask if the
word we're searching for is to the right or to the left or equal.  If equal, we're done. If left, then
move left and find the new middle and redo the process until found.  If right, do the same thing as on the
left side except on the right.


3. Given the alphabetically sorted collection in this checkpoint,
how many iterations would it take to find the value G using linear search?

7

4. Given the alphabetically sorted collection in this checkpoint,
how many iterations would it take to find the value G using binary search?

3


5. Given an unsorted collection of a million items, which algorithm would
you choose between linear search and binary search? Explain your reasoning.

Binary search could miss the answer entirely because it's not sorted.  You have to
use linear search to guarantee finding the correct answer.

6. Given a sorted collection of a million items, which algorithm would you
choose between linear search and binary search? Explain your reasoning.

Both would find the answer since it's sorted, but binary search is O(log(n)), whereas linear search
is O(n).  Binary is faster on average, therefore choose binary search.


Programming Questions:

1. You and a friend have set a wager to see who can find the word "Albatross"
in the dictionary the fastest. Write a program to allow you to win the bet.


function Dictionary(){
  this.data = [];
  this.length = this.data.length;
}

Dictionary.prototype.addWord = function(word){
  this.data.push(word);
  this.length++;
}

Dictionary.prototype.findWord = function(lowIndex, middleIndex, highIndex, word){
  var dictionary = this.data;
  if (dictionary[lowIndex] === word){
    return lowIndex;
  } else if (dictionary[middleIndex] === word){
    return middleIndex;
  } else if (dictionary[highIndex] === word){
    return highIndex;
  } else if (word > dictionary[middleIndex]){
    lowIndex = middleIndex + 1;
    middleIndex = Math.trunc((lowIndex + highIndex)/2);
    return this.findWord(lowIndex, middleIndex, highIndex, word);
  } else if (word < dictionary[middleIndex]){
    highIndex = middleIndex - 1;
    middleIndex = Math.trunc((lowIndex + highIndex)/2);
    return this.findWord(lowIndex, middleIndex, highIndex, word);
  }
}


var dict = new Dictionary;
dict.addWord("ashley")
dict.addWord("mary")
dict.addWord("susan")
dict.addWord("victor")
dict.findWord(0, Math.trunc((0 + dict.length -1)/2), dict.length - 1, "susan");








2. You work at a pet store, and a child has asked you to net the only white-spotted
goldfish from the fish tank. Write a program that will help you net the right fish.
